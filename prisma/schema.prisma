// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model SystemMenus {
  id         Int     @id @default(autoincrement())
  name       String
  path       String
  icon       String?
  order      Int
  parent_id  Int     @default(0)
  type       Int
  status     Int     @default(1)
  noClosable Int     @default(0)
  hidden     Int     @default(0)
  activeMenu String?
  guard      String?
  dot        Int     @default(0)
  badge      String?
  target     Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("system_menus")
}

model SystemUsers {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String
  status     Int       @default(0)
  order      Int       @default(100)
  union_id   String?
  open_id    String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  profile    UserProfile?

  @@map("system_users")
}

model UserProfile {
  id         Int       @id @default(autoincrement())
  userId     Int       @unique
  name       String?
  email      String?
  phone      String?
  avatar     String?
  expired    DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  user       SystemUsers @relation(fields: [userId], references: [id])

  @@map("user_profiles")
}

model SystemLogs {
  id         Int      @id @default(autoincrement())
  api        String
  type       Int
  status     Int
  content    String
  username   String
  ip         String
  created_at DateTime @default(now())

  @@map("system_logs")
}
